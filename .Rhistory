root <- subset_metabarlist(natura_clean, table = "samples",
indices = natura_clean$samples$organ == "root" & natura_clean$samples$Genus != "Tachigali") #because too few individuals
#root_sin_TM <- subset_metabarlist(root, table = "samples",indices = natura_clean$samples$name != "Tachigali_melinonii")
#root.dis.hell.bray <- vegdist(decostand(root$reads, method = "hellinger"),method = "bray")
hill<- hill_taxa_parti_pairwise(root$reads,q=1,output="matrix", pairs = "full")
hill.beta  <- hill$TD_beta
hill.beta.dist  <- as.dist(hill.beta)
mod.root <- betadisper(d = hill.beta.dist, group = as.factor(root$samples$Name), type = "median")
mod.root
# tests if centroid distances are significantly different from each other
anova(mod.root) #  0.5625
root_tuket <- TukeyHSD(mod.root) #aucune paires de significatives
plot(mod.root)
# Dimension 1 & 2 (i.e., Axis 1 (PCOA1))
Axis1.percent <- mod.root$eig[1]/ sum(mod.root$eig) * 100 #6.8
Axis2.percent <-  mod.root$eig[2]/ sum(mod.root$eig) * 100 #6.03
#have a better plot
betadisper_dat <- get_betadisper_data(mod.root)
betadisper_dat$eigenvalue <- mutate(betadisper_dat$eigenvalue, percent = eig/sum(eig))
betadisper_dat$chull <- group_by(betadisper_dat$eigenvector, group) %>%
do(data.frame(PCoA1 = .$PCoA1[c(chull(.$PCoA1, .$PCoA2), chull(.$PCoA1, .$PCoA2)[1])],
PCoA2 = .$PCoA2[c(chull(.$PCoA1, .$PCoA2), chull(.$PCoA1, .$PCoA2)[1])])) %>%
data.frame()
betadisper_lines <- merge(dplyr::select(betadisper_dat$centroids, group, PCoA1, PCoA2), dplyr::select(betadisper_dat$eigenvector, group, PCoA1, PCoA2), by = c('group'))
pcoa_beta_root <- ggplot() +
geom_point(aes(PCoA1, PCoA2, col = group), betadisper_dat$centroids, size = 4 ) +
geom_point(aes(PCoA1, PCoA2, col = group), betadisper_dat$eigenvector) +
geom_path(aes(PCoA1, PCoA2, col = group, group = group), betadisper_dat$chull ) +
#geom_segment(aes(x = PCoA1.x, y = PCoA2.x, yend = PCoA2.y, xend = PCoA1.y, group = row.names(betadisper_lines), col = group), betadisper_lines) +
theme_classic(base_size = 12, base_family = 'Helvetica') +
ylab('PCoA 2 - 6.0%') +
xlab('PCoA 1 - 6.8%') +
theme(legend.position = 'bottom') +
ggtitle("Root")+
theme(plot.title = element_text(color = "#E79F02", face = "bold"))+
scale_color_manual(values = group_colors_sans_tachi)
# Define the desired colors
# all seven
group_colors <- c("#F8766D", "#C49A00", "#53B400", "#00C094", "#00B6EB", "#A58AFF", "#FB61D7")
#without tachigali
group_colors_sans_tachi <- c("#F8766D", "#C49A00", "#53B400", "#00C094", "#00B6EB", "#FB61D7")
# calculate Bray-Curtis distance using the vegan package
#Microbiota data are sparse and specific distances, such as Bray-Curtis, Jaccard or weight/unweight Unifrac distances, better deal with the problem of the presence of many double zeros in data sets.
#dis.hell.bray <- vegdist(decostand(natura_clean$reads, method = "hellinger"),   method = "bray") #hellinger transformation before calculating a dissimilar matrix based on the bray method.  Hellinger transformation converts species abundances from absolute to relative values (i.e. standardizes the abundances to sample totals) and then square roots them.
hill <- hill_taxa_parti_pairwise(natura_clean$reads,q=1,output="matrix", pairs = "full")
hill.beta  <- hill$TD_beta
hill.beta.dist <- as.dist(hill.beta)
#hill.dist  <- dist(hill.dist)   #dist() will actually calculate the distance matrix whereas as.dist() only will try to coerce a object to a distance matrix.
mod <- betadisper(d = hill.beta.dist, group = as.factor(natura_clean$samples$organ), type = "median")
mod
# tests if centroid distances are significantly different from each other
anova(mod) #yes 2.244e-16 ***
TukeyHSD(mod)
# Plot the groups and distances to centroids on the
## first two PCoA axes
plot(mod)
# Dimension (i.e., Axis 1 (PCOA1))
Axis1.percent <- mod$eig[1]/ sum(mod$eig) * 100 #11.11
Axis1.percent
# Dimension (i.e., Axis 2 (PCOA2))
Axis2.percent <-  mod$eig[2]/ sum(mod$eig) * 100 #5.52
Axis2.percent
# get betadisper dataframes ####
# have written functions to grab the necessary data from the betadisper object
# functions #### before load them
# getting distances from betadisper() object
# get betadisper data ####
betadisper_dat <- get_betadisper_data(mod)
# do some transformations on the data
betadisper_dat$eigenvalue <- mutate(betadisper_dat$eigenvalue, percent = eig/sum(eig))
# add convex hull points ####
# this could be put in a function
betadisper_dat$chull <- group_by(betadisper_dat$eigenvector, group) %>%
do(data.frame(PCoA1 = .$PCoA1[c(chull(.$PCoA1, .$PCoA2), chull(.$PCoA1, .$PCoA2)[1])],
PCoA2 = .$PCoA2[c(chull(.$PCoA1, .$PCoA2), chull(.$PCoA1, .$PCoA2)[1])])) %>%
data.frame()
# combine centroid and eigenvector dataframes for plotting
betadisper_lines <- merge(dplyr::select(betadisper_dat$centroids, group, PCoA1, PCoA2), dplyr::select(betadisper_dat$eigenvector, group, PCoA1, PCoA2), by = c('group'))
# Now the dataframes are all ready to be completely customisable in ggplot
# plot betadispersion plot
pcoa_beta_its_all <- ggplot() +
geom_point(aes(PCoA1, PCoA2, col = group), betadisper_dat$centroids, size = 4 ) +
geom_point(aes(PCoA1, PCoA2, col = group), betadisper_dat$eigenvector) +
geom_path(aes(PCoA1, PCoA2, col = group, group = group), betadisper_dat$chull ) +
geom_segment(aes(x = PCoA1.x, y = PCoA2.x, yend = PCoA2.y, xend = PCoA1.y, group = row.names(betadisper_lines), col = group), betadisper_lines) +
theme_classic(base_size = 12, base_family = 'Helvetica') +
ylab('PCoA 2 - 5.5%') +
xlab('PCoA 1 - 11.1%') +
theme(legend.position = 'none') + #remove legend
# ggtitle("Beta diversity - ITS")+
# Set the colors for the two groups
scale_color_manual(values = c(leaf = "#6bbf59", root = "#E79F02")) +
# Add text labels for the two groups
geom_text(aes(x = -0.5, y = 1, label = "leaf"), color = "#6bbf59", size = 6) +
geom_text(aes(x = 0.5, y = 1, label = "root"), color = "#E79F02", size = 6)
pcoa_beta_its_all
ggsave("./results/ITS_all_beta_diversity.jpeg", pcoa_beta_its_all)
## Draw a boxplot of the distances to centroid for each group
boxplot(mod)
## Permutation test for F
set.seed(12345)
r <- permutest(mod, pairwise = TRUE, permutations = 99) #permutation step to see if we have differences in terms of the mean distance to centroid in the randomozed data. pvalue generated from the permutation test is not significant  0.01. Groups or species explain 0.04 of the variation. So no differences in the dispersion of the groups.
df <- data.frame(Distance_to_centroid=mod$distances,Group=mod$group)
groups <- mod$group
p<- ggplot(data=df,aes(x=Group,y=Distance_to_centroid,colour=groups)) +
geom_boxplot(alpha=0.5) +
theme_classic(base_size = 12)+
annotate(geom="text", x=1.5, y=1.5, label="Permutation test",
color="black", size = 4)+
annotate(geom="text", x=1.5, y=1.45, label="p-value = 0.01 **",
color="black", size = 4)+
ylab('Distance \n to centroid') +
theme(legend.position = "none", axis.title.x =element_blank())  +
scale_color_manual(values = c(leaf = "#6bbf59", root = "#E79F02"))
p
#ggsave("./results/ITS_all_beta_diversity_suite.jpeg", p)
#Combine the two graphs
Beta_all <- ggarrange( pcoa_beta_its_all, p, ncol = 2, nrow = 1, widths = c(1, 0.7), labels = c("A", "B"))
Beta_all
#ggsave("./results/ITS_all_beta_diversity.jpeg", Beta_all)
#subset leaf and repeat same analysis---------
leaf <- subset_metabarlist(natura_clean, table = "samples",
indices = natura_clean$samples$organ == "leaf")
#leaf.dis.hell.bray <- vegdist(decostand(leaf$reads, method = "hellinger"),   method = "bray")
hill <- hill_taxa_parti_pairwise(leaf$reads,q=1,output="matrix", pairs = "full")
hill.beta  <- hill$TD_beta
hill.beta.dist  <- as.dist(hill.beta)
mod.leaf <- betadisper(d = hill.beta.dist, group = as.factor(leaf$samples$Name), type = "median")
mod.leaf
# tests if centroid distances are significantly different from each other
anova(mod.leaf) #no 0.6947
leaf_tuket <- TukeyHSD(mod.leaf) #aucune paires de significatives
plot(mod.leaf)
# Dimension 1 & 2 (i.e., Axis 1 (PCOA1))
Axis1.percent <- mod.leaf$eig[1]/ sum(mod.leaf$eig) * 100 #44.69416
Axis2.percent <-  mod.leaf$eig[2]/ sum(mod.leaf$eig) * 100 #14.98621
#have a better plot
betadisper_dat <- get_betadisper_data(mod.leaf)
betadisper_dat$eigenvalue <- mutate(betadisper_dat$eigenvalue, percent = eig/sum(eig))
betadisper_dat$chull <- group_by(betadisper_dat$eigenvector, group) %>%
do(data.frame(PCoA1 = .$PCoA1[c(chull(.$PCoA1, .$PCoA2), chull(.$PCoA1, .$PCoA2)[1])],
PCoA2 = .$PCoA2[c(chull(.$PCoA1, .$PCoA2), chull(.$PCoA1, .$PCoA2)[1])])) %>%
data.frame()
betadisper_lines <- merge(dplyr::select(betadisper_dat$centroids, group, PCoA1, PCoA2), dplyr::select(betadisper_dat$eigenvector, group, PCoA1, PCoA2), by = c('group'))
betadisper_lines <- betadisper_lines %>%
mutate(group = gsub("_", " ", group)) %>%
separate(group, c("Genus", "Species")) %>%
mutate(group = paste0(substr(Genus, 1, 1), ".", " ", Species)) %>%
dplyr::select(-Genus, -Species)
betadisper_dat$centroids <- betadisper_dat$centroids %>%
mutate(group = gsub("_", " ", group)) %>%
separate(group, c("Genus", "Species")) %>%
mutate(group = paste0(substr(Genus, 1, 1), ".", " ", Species)) %>%
dplyr::select(-Genus, -Species)
betadisper_dat$eigenvector <- betadisper_dat$eigenvector %>%
mutate(group = gsub("_", " ", group)) %>%
separate(group, c("Genus", "Species")) %>%
mutate(group = paste0(substr(Genus, 1, 1), ".", " ", Species)) %>%
dplyr::select(-Genus, -Species)
betadisper_dat$chull <- betadisper_dat$chull %>%
mutate(group = gsub("_", " ", group)) %>%
separate(group, c("Genus", "Species")) %>%
mutate(group = paste0(substr(Genus, 1, 1), ".", " ", Species)) %>%
dplyr::select(-Genus, -Species)
pcoa_beta_leaf <-  ggplot() +
geom_point(aes(PCoA1, PCoA2, col = group), betadisper_dat$centroids, size = 4 ) +
geom_point(aes(PCoA1, PCoA2, col = group), betadisper_dat$eigenvector) +
geom_path(aes(PCoA1, PCoA2, group =  group, col = group), betadisper_dat$chull) +
# geom_segment(aes(x = PCoA1.x, y = PCoA2.x, yend = PCoA2.y, xend = PCoA1.y, group = group, col = group), betadisper_lines) +
theme_classic(base_size = 12, base_family = 'Helvetica') +
ylab('PCoA 2 - 6.3%') +
xlab('PCoA 1 - 10.0%') +
ggtitle("Leaf") +
theme(plot.title = element_text(color = "#6bbf59", face = "bold"), legend.position = 'bottom', legend.text = element_text(face= "italic", size = 14)) +
labs(col = "Species")
pcoa_beta_leaf
# extract the legend as a text grob for later
legend_grob <- get_legend( pcoa_beta_leaf  )
# draw the legend as a standalone plot for later
legend_plot <- gridExtra::arrangeGrob(legend_grob, ncol = 1)
# Draw a boxplot of the distances to centroid for each group
boxplot(mod.leaf)
df <- data.frame(Distance_to_centroid=mod.leaf$distances,Group=mod.leaf$group)
groups <- mod.leaf$group
## Permutation test for F
set.seed(12345)
r.leaf <- permutest(mod.leaf, pairwise = TRUE, permutations = 99)
leaf<- df %>%
mutate(name = gsub("_", " ", Group)) %>%
separate(name, c("Genus", "Species")) %>%
mutate(Group = paste0(substr(Genus, 1, 1), ".", " ", Species)) %>%
ggplot(aes(x=Group,y=Distance_to_centroid,colour=groups)) +
geom_boxplot(alpha=0.5) +
ylab('Distance \n to centroid') +
theme_classic(base_size = 12)+
# annotate(geom="text", x=1, y=0.69, label="Permutation test",color="black")+
annotate(geom="text", x=4, y=1.4, label="p-value=0.8",
color="black")+
theme(legend.position = "none", axis.title.x =element_blank(), axis.text.x = element_blank())
leaf
#Combine the two graphs
Beta_leaf <- ggarrange(pcoa_beta_leaf , leaf, ncol = 2, nrow = 1, widths = c(1, 0.7), common.legend = TRUE, legend = "none", labels = c("C", "D"))
Beta_leaf
#subset root and repeat same analysis---------
root <- subset_metabarlist(natura_clean, table = "samples",
indices = natura_clean$samples$organ == "root" & natura_clean$samples$Genus != "Tachigali") #because too few individuals
#root_sin_TM <- subset_metabarlist(root, table = "samples",indices = natura_clean$samples$name != "Tachigali_melinonii")
#root.dis.hell.bray <- vegdist(decostand(root$reads, method = "hellinger"),method = "bray")
hill<- hill_taxa_parti_pairwise(root$reads,q=1,output="matrix", pairs = "full")
hill.beta  <- hill$TD_beta
hill.beta.dist  <- as.dist(hill.beta)
mod.root <- betadisper(d = hill.beta.dist, group = as.factor(root$samples$Name), type = "median")
mod.root
# tests if centroid distances are significantly different from each other
anova(mod.root) #  0.5625
root_tuket <- TukeyHSD(mod.root) #aucune paires de significatives
plot(mod.root)
# Dimension 1 & 2 (i.e., Axis 1 (PCOA1))
Axis1.percent <- mod.root$eig[1]/ sum(mod.root$eig) * 100 #6.8
Axis2.percent <-  mod.root$eig[2]/ sum(mod.root$eig) * 100 #6.03
#have a better plot
betadisper_dat <- get_betadisper_data(mod.root)
betadisper_dat$eigenvalue <- mutate(betadisper_dat$eigenvalue, percent = eig/sum(eig))
betadisper_dat$chull <- group_by(betadisper_dat$eigenvector, group) %>%
do(data.frame(PCoA1 = .$PCoA1[c(chull(.$PCoA1, .$PCoA2), chull(.$PCoA1, .$PCoA2)[1])],
PCoA2 = .$PCoA2[c(chull(.$PCoA1, .$PCoA2), chull(.$PCoA1, .$PCoA2)[1])])) %>%
data.frame()
betadisper_lines <- merge(dplyr::select(betadisper_dat$centroids, group, PCoA1, PCoA2), dplyr::select(betadisper_dat$eigenvector, group, PCoA1, PCoA2), by = c('group'))
pcoa_beta_root <- ggplot() +
geom_point(aes(PCoA1, PCoA2, col = group), betadisper_dat$centroids, size = 4 ) +
geom_point(aes(PCoA1, PCoA2, col = group), betadisper_dat$eigenvector) +
geom_path(aes(PCoA1, PCoA2, col = group, group = group), betadisper_dat$chull ) +
#geom_segment(aes(x = PCoA1.x, y = PCoA2.x, yend = PCoA2.y, xend = PCoA1.y, group = row.names(betadisper_lines), col = group), betadisper_lines) +
theme_classic(base_size = 12, base_family = 'Helvetica') +
ylab('PCoA 2 - 6.0%') +
xlab('PCoA 1 - 6.8%') +
theme(legend.position = 'bottom') +
ggtitle("Root")+
theme(plot.title = element_text(color = "#E79F02", face = "bold"))+
scale_color_manual(values = group_colors_sans_tachi)
pcoa_beta_root
# Draw a boxplot of the distances to centroid for each group
boxplot(mod.root)
df <- data.frame(Distance_to_centroid=mod.root$distances,Group=mod.root$group)
groups <- mod.root$group
## Permutation test for F
set.seed(12345)
r.root <- permutest(mod.root, pairwise = TRUE, permutations = 99) #0.59
root<- df %>%
mutate(name = gsub("_", " ", Group)) %>%
separate(name, c("Genus", "Species")) %>%
mutate(Group = paste0(substr(Genus, 1, 1), ".", " ", Species)) %>%
ggplot(aes(x=Group,y=Distance_to_centroid,colour=groups)) +
geom_boxplot(alpha=0.5) +
ylab('Distance \n to centroid') +
theme_classic(base_size = 12)+
# annotate(geom="text", x=1, y=0.69, label="Permutation test", color="black")+
annotate(geom="text", x=3.5, y=1.4, label="p-value=0.6",
color="black")+
theme(legend.position = "none", axis.title.x =element_blank(), axis.text.x = element_blank())+
scale_color_manual(values = group_colors_sans_tachi)
root
#Combine the two graphs
Beta_root <- ggarrange(pcoa_beta_root , root, ncol = 2, nrow = 1, widths = c(1,0.7), common.legend = TRUE, legend = "none", labels= c("E", "F"))
Beta_root
#ggsave("./results/ITS_all_beta_diversity.jpeg", Beta_all)
#Combine all graphs
Beta_option1 <- ggarrange(Beta_all, ggarrange(Beta_leaf, Beta_root, ncol = 2, nrow = 1), legend_plot, nrow = 3, heights = c(2,1, 0.5))
Beta_option2 <- ggarrange(Beta_all, Beta_leaf, Beta_root,legend_plot, ncol = 1, nrow = 4, heights = c(1,1,1, 0.3), widths = c(0.5, 0.5,0.5,1))
Beta_option2
ggsave("./results/Beta_ITS.jpeg", Beta_option2, width = 9, height = 7)
ggsave("./results/Figure1.pdf", Beta_option2, width = 9, height = 7, dpi = 600)
# calculate Bray-Curtis distance using the vegan package
#Microbiota data are sparse and specific distances, such as Bray-Curtis, Jaccard or weight/unweight Unifrac distances, better deal with the problem of the presence of many double zeros in data sets.
#dis.hell.bray <- vegdist(decostand(natura_clean$reads, method = "hellinger"),   method = "bray") #hellinger transformation before calculating a dissimilar matrix based on the bray method.  Hellinger transformation converts species abundances from absolute to relative values (i.e. standardizes the abundances to sample totals) and then square roots them.
load("./resources/Metabarlist_natura_clean_16S_traits_alpha.Rdata")
hill <- hill_taxa_parti_pairwise(natura_clean$reads,q=1,output="matrix", pairs = "full")
hill.beta  <- hill$TD_beta
hill.beta.dist <- as.dist(hill.beta)
#hill.dist  <- dist(hill.dist)   #dist() will actually calculate the distance matrix whereas as.dist() only will try to coerce a object to a distance matrix.
mod <- betadisper(d = hill.beta.dist, group = as.factor(natura_clean$samples$organ), type = "median")
mod
# tests if centroid distances are significantly different from each other
anova(mod) #yes 0.03335 *
TukeyHSD(mod)
# Plot the groups and distances to centroids on the
## first two PCoA axes
plot(mod)
# Dimension (i.e., Axis 1 (PCOA1))
Axis1.percent <- mod$eig[1]/ sum(mod$eig) * 100 #25.16776
Axis1.percent
# Dimension (i.e., Axis 2 (PCOA2))
Axis2.percent <-  mod$eig[2]/ sum(mod$eig) * 100 #5.53988
Axis2.percent
# get betadisper dataframes ####
# have written functions to grab the necessary data from the betadisper object
# functions #### before load them
# getting distances from betadisper() object
# get betadisper data ####
betadisper_dat <- get_betadisper_data(mod)
# do some transformations on the data
betadisper_dat$eigenvalue <- mutate(betadisper_dat$eigenvalue, percent = eig/sum(eig))
# add convex hull points ####
# this could be put in a function
betadisper_dat$chull <- group_by(betadisper_dat$eigenvector, group) %>%
do(data.frame(PCoA1 = .$PCoA1[c(chull(.$PCoA1, .$PCoA2), chull(.$PCoA1, .$PCoA2)[1])],
PCoA2 = .$PCoA2[c(chull(.$PCoA1, .$PCoA2), chull(.$PCoA1, .$PCoA2)[1])])) %>%
data.frame()
# combine centroid and eigenvector dataframes for plotting
betadisper_lines <- merge(dplyr::select(betadisper_dat$centroids, group, PCoA1, PCoA2), dplyr::select(betadisper_dat$eigenvector, group, PCoA1, PCoA2), by = c('group'))
# Now the dataframes are all ready to be completely customisable in ggplot
# plot betadispersion plot
pcoa_beta_16S_all <- ggplot() +
geom_point(aes(PCoA1, PCoA2, col = group), betadisper_dat$centroids, size = 4 ) +
geom_point(aes(PCoA1, PCoA2, col = group), betadisper_dat$eigenvector) +
geom_path(aes(PCoA1, PCoA2, col = group, group = group), betadisper_dat$chull ) +
geom_segment(aes(x = PCoA1.x, y = PCoA2.x, yend = PCoA2.y, xend = PCoA1.y, group = row.names(betadisper_lines), col = group), betadisper_lines) +
theme_classic(base_size = 12, base_family = 'Helvetica') +
ylab('PCoA 2 - 5.5%') +
xlab('PCoA 1 - 25.2%') +
theme(legend.position = 'none') + #remove legend
# ggtitle("Beta diversity - 16S")+
# Set the colors for the two groups
scale_color_manual(values = c(leaf = "#6bbf59", root = "#E79F02")) +
# Add text labels for the two groups
geom_text(aes(x = -0.5, y = 1, label = "leaf"), color = "#6bbf59", size = 6) +
geom_text(aes(x = 0.5, y = 1, label = "root"), color = "#E79F02", size = 6)
pcoa_beta_16S_all
ggsave("./results/16S_all_beta_diversity.jpeg", pcoa_beta_16S_all)
## Draw a boxplot of the distances to centroid for each group
boxplot(mod)
## Permutation test for F
set.seed(12345); r <- permutest(mod, pairwise = TRUE, permutations = 99) #permutation step to see if we have differences in terms of the mean distance to centroid in the randomozed data.
r
df <- data.frame(Distance_to_centroid=mod$distances,Group=mod$group)
groups <- mod$group
p<- ggplot(data=df,aes(x=Group,y=Distance_to_centroid,colour=groups)) +
geom_boxplot(alpha=0.5) +
theme_classic(base_size = 12)+
annotate(geom="text", x=1.5, y=1.5, label="Permutation test",
color="black", size = 4)+
annotate(geom="text", x=1.5, y=1.43, label="p-value = 0.07",
color="black", size = 4)+
ylab('Distance \n to centroid') +
theme(legend.position = "none", axis.title.x =element_blank())  +
scale_color_manual(values = c(leaf = "#6bbf59", root = "#E79F02"))
p
#ggsave("./results/16S_all_beta_diversity_suite.jpeg", p)
#Combine the two graphs
Beta_all <- ggarrange( pcoa_beta_16S_all, p, ncol = 2, nrow = 1, widths = c(1, 0.7), labels = c("A", "B"))
Beta_all
#ggsave("./results/16S_all_beta_diversity.jpeg", Beta_all)
#subset leaf and repeat same analysis---------
leaf <- subset_metabarlist(natura_clean, table = "samples",
indices = natura_clean$samples$organ == "leaf")
#leaf.dis.hell.bray <- vegdist(decostand(leaf$reads, method = "hellinger"),   method = "bray")
hill <- hill_taxa_parti_pairwise(leaf$reads,q=1,output="matrix", pairs = "full")
hill.beta  <- hill$TD_beta
hill.beta.dist  <- as.dist(hill.beta)
mod.leaf <- betadisper(d = hill.beta.dist, group = as.factor(leaf$samples$Name), type = "median")
mod.leaf
# tests if centroid distances are significantly different from each other
anova(mod.leaf) #yes 0.01656 *
leaf_tuket <- TukeyHSD(mod.leaf) #aucune paires de significatives
plot(mod.leaf)
# Dimension 1 & 2 (i.e., Axis 1 (PCOA1))
Axis1.percent <- mod.leaf$eig[1]/ sum(mod.leaf$eig) * 100 #10.37157
Axis1.percent
Axis2.percent <-  mod.leaf$eig[2]/ sum(mod.leaf$eig) * 100 #6.442368
Axis2.percent
#have a better plot
betadisper_dat <- get_betadisper_data(mod.leaf)
betadisper_dat$eigenvalue <- mutate(betadisper_dat$eigenvalue, percent = eig/sum(eig))
betadisper_dat$chull <- group_by(betadisper_dat$eigenvector, group) %>%
do(data.frame(PCoA1 = .$PCoA1[c(chull(.$PCoA1, .$PCoA2), chull(.$PCoA1, .$PCoA2)[1])],
PCoA2 = .$PCoA2[c(chull(.$PCoA1, .$PCoA2), chull(.$PCoA1, .$PCoA2)[1])])) %>%
data.frame()
betadisper_lines <- merge(dplyr::select(betadisper_dat$centroids, group, PCoA1, PCoA2), dplyr::select(betadisper_dat$eigenvector, group, PCoA1, PCoA2), by = c('group'))
betadisper_lines <- betadisper_lines %>%
mutate(group = gsub("_", " ", group)) %>%
separate(group, c("Genus", "Species")) %>%
mutate(group = paste0(substr(Genus, 1, 1), ".", " ", Species)) %>%
dplyr::select(-Genus, -Species)
betadisper_dat$centroids <- betadisper_dat$centroids %>%
mutate(group = gsub("_", " ", group)) %>%
separate(group, c("Genus", "Species")) %>%
mutate(group = paste0(substr(Genus, 1, 1), ".", " ", Species)) %>%
dplyr::select(-Genus, -Species)
betadisper_dat$eigenvector <- betadisper_dat$eigenvector %>%
mutate(group = gsub("_", " ", group)) %>%
separate(group, c("Genus", "Species")) %>%
mutate(group = paste0(substr(Genus, 1, 1), ".", " ", Species)) %>%
dplyr::select(-Genus, -Species)
betadisper_dat$chull <- betadisper_dat$chull %>%
mutate(group = gsub("_", " ", group)) %>%
separate(group, c("Genus", "Species")) %>%
mutate(group = paste0(substr(Genus, 1, 1), ".", " ", Species)) %>%
dplyr::select(-Genus, -Species)
pcoa_beta_leaf <-  ggplot() +
geom_point(aes(PCoA1, PCoA2, col = group), betadisper_dat$centroids, size = 4 ) +
geom_point(aes(PCoA1, PCoA2, col = group), betadisper_dat$eigenvector) +
geom_path(aes(PCoA1, PCoA2, group =  group, col = group), betadisper_dat$chull) +
# geom_segment(aes(x = PCoA1.x, y = PCoA2.x, yend = PCoA2.y, xend = PCoA1.y, group = group, col = group), betadisper_lines) +
theme_classic(base_size = 12, base_family = 'Helvetica') +
ylab('PCoA 2 - 6.4%') +
xlab('PCoA 1 - 10.4%') +
ggtitle("Leaf") +
theme(plot.title = element_text(color = "#6bbf59", face = "bold"), legend.position = 'bottom', legend.text = element_text(face= "italic", size = 14)) +
labs(col = "Species")
pcoa_beta_leaf
# extract the legend as a text grob for later
legend_grob <- get_legend( pcoa_beta_leaf  )
# draw the legend as a standalone plot for later
legend_plot <- gridExtra::arrangeGrob(legend_grob, ncol = 1)
# Draw a boxplot of the distances to centroid for each group
boxplot(mod.leaf)
df <- data.frame(Distance_to_centroid=mod.leaf$distances,Group=mod.leaf$group)
groups <- mod.leaf$group
## Permutation test for F
set.seed(12345); r.leaf <- permutest(mod.leaf, pairwise = TRUE, permutations = 99)
## post hoc test
r.leaf.aov<- aov(mod.leaf$distances~ mod.leaf$group, data = df) #meme chose que permutest
r.leaf.tukey <- TukeyHSD(r.leaf.aov)
cld.r.leaf<- multcompView::multcompLetters4(r.leaf.aov, r.leaf.tukey)
letters.leaf <- as.data.frame.list(cld.r.leaf$`mod.leaf$group`)
TK.leaf <- group_by(df, Group) %>%
summarise(mean = mean(Distance_to_centroid),
quant = quantile(Distance_to_centroid, probs = 0.75)) %>%
arrange(desc(mean))
TK.leaf$letters <- letters.leaf$Letters
leaf<- df %>%
mutate(name = gsub("_", " ", Group)) %>%
separate(name, c("Genus", "Species")) %>%
mutate(Group = paste0(substr(Genus, 1, 1), ".", " ", Species)) %>%
ggplot(aes(x=Group,y=Distance_to_centroid,colour=groups)) +
geom_boxplot(alpha=0.5) +
ylab("Distance \n to centroid")+
theme_classic(base_size = 12)+
#annotate(geom="text", x=1, y=0.69, label="Permutation test",color="black")+
geom_text(data = TK.leaf, aes(label = letters, x = Group, y = quant),
vjust = -0.2, hjust = 0.8, size = 6, color = "black") +
annotate(geom="text", x=7, y=1.1, label="p-value=0.03*",
color="black")+
theme(legend.position = "none", axis.title.x =element_blank(), axis.text.x = element_blank())
leaf
#Combine the two graphs
Beta_leaf <- ggarrange(pcoa_beta_leaf , leaf, ncol = 2, nrow = 1, widths = c(1, 0.7), common.legend = TRUE, legend = "none", labels = c("C", "D"))
Beta_leaf
#subset root and repeat same analysis---------
root <- subset_metabarlist(natura_clean, table = "samples",
indices = natura_clean$samples$organ == "root")
hill<- hill_taxa_parti_pairwise(root$reads,q=1,output="matrix", pairs = "full")
hill.beta  <- hill$TD_beta
hill.beta.dist  <- as.dist(hill.beta)
mod.root <- betadisper(d = hill.beta.dist, group = as.factor(root$samples$Name), type = "median")
mod.root
# tests if centroid distances are significantly different from each other
anova(mod.root) #  0.5625
root_tuket <- TukeyHSD(mod.root) #aucune paires de significatives
plot(mod.root)
# Dimension 1 & 2 (i.e., Axis 1 (PCOA1))
Axis1.percent <- mod.root$eig[1]/ sum(mod.root$eig) * 100 #10.91229
Axis1.percent
Axis2.percent <-  mod.root$eig[2]/ sum(mod.root$eig) * 100 #4.65
Axis2.percent
#have a better plot
betadisper_dat <- get_betadisper_data(mod.root)
betadisper_dat$eigenvalue <- mutate(betadisper_dat$eigenvalue, percent = eig/sum(eig))
betadisper_dat$chull <- group_by(betadisper_dat$eigenvector, group) %>%
do(data.frame(PCoA1 = .$PCoA1[c(chull(.$PCoA1, .$PCoA2), chull(.$PCoA1, .$PCoA2)[1])],
PCoA2 = .$PCoA2[c(chull(.$PCoA1, .$PCoA2), chull(.$PCoA1, .$PCoA2)[1])])) %>%
data.frame()
betadisper_lines <- merge(dplyr::select(betadisper_dat$centroids, group, PCoA1, PCoA2), dplyr::select(betadisper_dat$eigenvector, group, PCoA1, PCoA2), by = c('group'))
pcoa_beta_root <- ggplot() +
geom_point(aes(PCoA1, PCoA2, col = group), betadisper_dat$centroids, size = 4 ) +
geom_point(aes(PCoA1, PCoA2, col = group), betadisper_dat$eigenvector) +
geom_path(aes(PCoA1, PCoA2, col = group, group = group), betadisper_dat$chull ) +
theme_classic(base_size = 12, base_family = 'Helvetica') +
ylab('PCoA 2 - 4.7%') +
xlab('PCoA 1 - 10.9%') +
theme(legend.position = 'bottom') +
ggtitle("Root")+
theme(plot.title = element_text(color = "#E79F02", face = "bold"))
pcoa_beta_root
# Draw a boxplot of the distances to centroid for each group
boxplot(mod.root)
df <- data.frame(Distance_to_centroid=mod.root$distances,Group=mod.root$group)
groups <- mod.root$group
## Permutation test for F
set.seed(12345) ; r.root <- permutest(mod.root, pairwise = TRUE, permutations = 99) #0.4
root<- df %>%
mutate(name = gsub("_", " ", Group)) %>%
separate(name, c("Genus", "Species")) %>%
mutate(Group = paste0(substr(Genus, 1, 1), ".", " ", Species)) %>%
ggplot(aes(x=Group,y=Distance_to_centroid,colour=groups)) +
geom_boxplot(alpha=0.5) +
ylab('Distance \n to centroid') +
theme_classic(base_size = 12)+
annotate(geom="text", x=3.5, y=1.1, label="p-value=0.4",
color="black")+
theme(legend.position = "none", axis.title.x =element_blank(), axis.text.x = element_blank())
root
#Combine the two graphs
Beta_root <- ggarrange(pcoa_beta_root , root, ncol = 2, nrow = 1, widths = c(1,0.7), common.legend = TRUE, legend = "none", labels= c("E", "F"))
Beta_root
#ggsave("./results/16S_all_beta_diversity.jpeg", Beta_all)
#Combine all graphs
Beta_option1 <- ggarrange(Beta_all, ggarrange(Beta_leaf, Beta_root, ncol = 2, nrow = 1), legend_plot, nrow = 3, heights = c(2,1, 0.5))
Beta_option2 <- ggarrange(Beta_all, Beta_leaf, Beta_root,legend_plot, ncol = 1, nrow = 4, heights = c(1,1,1, 0.3), widths = c(0.5, 0.5,0.5,1))
Beta_option2
ggsave("./results/Beta_16S.jpeg", Beta_option2, width = 9, height = 7)
ggsave("./results/Figure2.pdf", Beta_option2, width = 9, height = 7, dpi = 600)
