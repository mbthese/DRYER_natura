indices = natura_clean$samples$organ == "leaf")
# Aggregate the metabarlist at the class level
leaf_genus <-  aggregate_motus(leaf, groups= leaf$motus$Genus)
leaf_genus$samples$Name <- paste0(substr(leaf_genus$samples$Genus, 1, 1), ".", " ", leaf_genus$samples$Species)
# Aggregate per organ/genus
tmp <-  melt(aggregate(leaf_genus$reads, by = list(
paste(leaf_genus$samples$Name)), sum))
colnames(tmp) <- c("Name", "Genus", "Value")
# Calculate the total abundance per Class
Genus_abundance <- aggregate(Value ~ Genus, data = tmp, sum)
options(scipen = 999)
total_sum <- sum(Genus_abundance$Value)
Genus_proportions <- Genus_abundance %>% mutate(Proportion = Value / total_sum *100)
Genus_proportions
top_10_proportions <- Genus_proportions %>%
arrange(desc(Proportion)) %>%
head(10)
View(top_10_proportions)
# Sort the data by the total abundance in descending Genus
top_phyla <- head(Genus_abundance$Genus[order(Genus_abundance$Value, decreasing = TRUE)],20)
# Classify other phyla as 'Others'
tmp <- tmp %>%
mutate(Genus2 = ifelse(Genus %in% top_phyla, paste0(Genus), "Others"))
# total abundance per species
sample_abundance <- tmp %>%
group_by(Name) %>%
summarize(TotalValue = sum(Value))
# Merge the total sample abundance with the data
tmp <- merge(tmp, sample_abundance, by = "Name")
# Calculate the relative abundances
tmp$RelativeAbundance <- tmp$Value / tmp$TotalValue
# Sort the data within each sample by increasing relative abundance
tmp <- tmp %>%
group_by(Name) %>%
arrange(RelativeAbundance)
tmp$Genus2[which(tmp$Genus== "NA; NA; NA")] <- "unidentified"
#cool function to make names pretty
simplify_A <- function(value) {
if (value == "Others") {
return("Others")
} else {
simplified <- sub("^.*?o__(\\w+).*?$", "o__\\1", value)
ifelse(grepl("NA", simplified), sub("; NA.*?$", "; unknown", simplified), simplified)
}
}
# Apply the function to create column B
tmp$Genus3 <- sapply(tmp$Genus2, simplify_A)
tmp <- tmp %>%
dplyr::select(-Genus)%>%
rename(Genus = Genus3)
# Define the manual colors for six levels
custom_colors20<- c("#774C22", "#965326",
"#FFE898",
"#C1A13E",
"#5D641E",
"#BAD0C4",
"#7CAED1", "#98D3F1",
"#EFEFBB", "#FFD34C",
"#dad7cd", "#386641", "#A7C957", "#a3b18a", "#B5E48C", "#432818","#F67E13", "#BC3853", "#F3E762",
"#64146E", "#A36A69")
#plot phyla
leaf_genus_plot <- tmp %>%
mutate(Name = gsub("_", " ", Name)) %>%
ggplot(aes(x=Name, y=RelativeAbundance, fill=Genus)) +
geom_bar(position="stack", stat="identity") +
labs(x=NULL, y="", fill="Genus") +
scale_fill_manual(values= custom_colors20) +
coord_flip() + scale_x_discrete(limits = rev(levels(as.factor(tmp$Name))))+
theme_bw() +
theme(legend.position = "right",axis.text.y = element_text(face = "italic")) +
ggtitle("Leaf")
## root
root <- subset_metabarlist(natura_clean, table = "samples",
indices = natura_clean$samples$organ == "root")
# Aggregate the metabarlist at the class level
root_Genus <-  aggregate_motus(root, groups= root$motus$Genus)
root_Genus$samples$Name <- paste0(substr(root_Genus$samples$Genus, 1, 1), ".", " ", root_Genus$samples$Species)
# Aggregate per organ/genus
tmp <-  melt(aggregate(root_Genus$reads, by = list(
paste(root_Genus$samples$Name)), sum))
colnames(tmp) <- c("Name", "Genus", "Value")
# Calculate the total abundance per Class
Genus_abundance <- aggregate(Value ~ Genus, data = tmp, sum)
options(scipen = 999)
total_sum <- sum(Genus_abundance$Value)
Genus_proportions <- Genus_abundance %>% mutate(Proportion = Value / total_sum *100)
Genus_proportions
top_10_proportions <- Genus_proportions %>%
arrange(desc(Proportion)) %>%
head(10)
View(top_10_proportions)
# Sort the data by the total abundance in descending Genus
top_phyla <- head(Genus_abundance$Genus[order(Genus_abundance$Value, decreasing = TRUE)],20)
# Classify other phyla as 'Others'
tmp <- tmp %>%
mutate(Genus2 = ifelse(Genus %in% top_phyla, paste0(Genus), "Others"))
# total abundance per species
sample_abundance <- tmp %>%
group_by(Name) %>%
summarize(TotalValue = sum(Value))
# Merge the total sample abundance with the data
tmp <- merge(tmp, sample_abundance, by = "Name")
# Calculate the relative abundances
tmp$RelativeAbundance <- tmp$Value / tmp$TotalValue
# Sort the data within each sample by increasing relative abundance
tmp <- tmp %>%
group_by(Name) %>%
arrange(RelativeAbundance)
tmp$Genus2[which(tmp$Genus== "NA; NA; NA")] <- "unidentified"
# Apply the function to create column B
tmp$Genus3 <- sapply(tmp$Genus2, simplify_A)
tmp <- tmp %>%
dplyr::select(-Genus)%>%
rename(Genus = Genus3)
tmp <- tmp %>%
dplyr::select(-Genus)%>%
rename(Genus = Genus3)
#plot phyla
root_genus_plot <- tmp  %>%
mutate(Name = gsub("_", " ", Name)) %>%
ggplot(aes(x=Name, y=RelativeAbundance, fill=Genus)) +
geom_bar(position="stack", stat="identity") +
labs(x=NULL, y="", fill="Genus") +
scale_fill_manual(values= custom_colors20) +
coord_flip() + scale_x_discrete(limits = rev(levels(as.factor(tmp$Name))))+
theme_bw() +
theme(legend.position = "right",axis.text.y = element_text(face = "italic")) +
ggtitle("Root")
Genus <- ggarrange(leaf_genus_plot, root_genus_plot, ncol = 1, nrow = 2)
ggsave("./results/Genus_fungi.jpeg", Genus, width = 8, height = 10)
#Plot-------------
#ITS
load("./results/null/bray_NDV_ITS_leaf.RData") #leaf
load("./results/null/bray_NDV_ITS_root.RData") #root
ndv_ITS_leaf <-data.frame(bray_abund_null_dev_fun)
ndv_ITS_root <-data.frame(bray_abund_null_dev_fun_root)
colnames(ndv_ITS_leaf)<-c("NDV")
colnames(ndv_ITS_root)<-c("NDV")
boxplot(bray_abund_null_dev_fun, bray_abund_null_dev_fun_root,outline=FALSE)
t.test(bray_abund_null_dev_fun,bray_abund_null_dev_fun_root, alternative = "two.sided", var.equal = FALSE)
plot_ITS <- ggplot()+
geom_boxplot(data=ndv_ITS_leaf,aes(x=factor(0),y=NDV),colour="black", fill="#009E73", alpha=0.6) +
geom_point(data=ndv_ITS_leaf,aes(x=factor(0),y=NDV),colour="black", position="jitter")+
geom_boxplot(data=ndv_ITS_root,aes(x=factor(1),y=NDV),colour="black",fill="#E69F00",  alpha=0.6)+
geom_point(data=ndv_ITS_root,aes(x=factor(1),y=NDV),colour="black", position="jitter")+
scale_x_discrete(breaks=c(0,1),labels=c("Leaf","Root"))+
# ggtitle("Fungi null beta-distribution")+
annotate("text",x=1.5,y=1,label="t = -18.01, df = 106", size = 6)+
annotate("text",x=1.5,y=0.9,label="P < 2.2e-16", size = 6)+
theme_minimal(base_size =25)+
theme(axis.title.x = element_blank())+
ylim(0.2, 1.05)
plot_ITS
ggsave("./results/plot_ITS_ndv.jpeg", plot_ITS)
#16S
load("./results/null/bray_NDV_16S_leaf.RData") #leaf
load("./results/null/bray_NDV_16S_root.RData") #root
boxplot(bray_abund_null_dev_fun, bray_abund_null_dev_fun_root,outline=FALSE)
t.test(bray_abund_null_dev_fun,bray_abund_null_dev_fun_root, alternative = "two.sided", var.equal = FALSE)
ndv_16S_leaf <-data.frame(bray_abund_null_dev_fun)
ndv_16S_root <-data.frame(bray_abund_null_dev_fun_root)
colnames(ndv_16S_leaf)<-c("NDV")
colnames(ndv_16S_root)<-c("NDV")
plot_16S <- ggplot()+
geom_boxplot(data=ndv_16S_leaf,aes(x=factor(0),y=NDV),colour="black", fill="#009E73", alpha=0.6) +
geom_point(data=ndv_16S_leaf,aes(x=factor(0),y=NDV), position="jitter")+
geom_boxplot(data=ndv_16S_root,aes(x=factor(1),y=NDV),colour="black",fill="#E69F00",alpha=0.6)+
geom_point(data=ndv_16S_root,aes(x=factor(1),y=NDV), position="jitter")+
scale_x_discrete(breaks=c(0,1),labels=c("Leaf","Root"))+
#ggtitle("Bacteria null beta-distribution")+
annotate("text",x=1.5,y=1,label="t = -1.8, df = 103", size = 6)+
annotate("text",x=1.5,y=0.9,label="P = 0.24", size = 6)+
theme_minimal(base_size = 25)+
theme(axis.title.x = element_blank())+
ylim(0.2, 1.05)
#plot together
text<- "A. Niche or neutral processes"
# Create a text grob
tgrob <- text_grob(text,size = 20)
# Draw the text
plot_0 <- as_ggplot(tgrob) + theme(plot.margin = margin(0,0,0,2, "cm"))
NDV_plot <- ggarrange(plot_0,NULL, plot_16S,plot_ITS,
labels = c("", "", "Bacteria", "Fungi"),                      ncol = 2, nrow = 2, font.label = list(face="italic"), heights= c(1,3))
NDV_plot
#ggsave(filename = "NDV.png", plot = NDV_plot, bg = "white", width = 10, height = 8, dpi = 600)
gc()
gc()
#Plot-------------
#ITS
load("./results/null/bray_NDV_ITS_leaf.RData") #leaf
load("./results/null/bray_NDV_ITS_root.RData") #root
ndv_ITS_leaf <-data.frame(bray_abund_null_dev_fun)
ndv_ITS_root <-data.frame(bray_abund_null_dev_fun_root)
colnames(ndv_ITS_leaf)<-c("NDV")
colnames(ndv_ITS_root)<-c("NDV")
boxplot(bray_abund_null_dev_fun, bray_abund_null_dev_fun_root,outline=FALSE)
t.test(bray_abund_null_dev_fun,bray_abund_null_dev_fun_root, alternative = "two.sided", var.equal = FALSE)
plot_ITS <- ggplot()+
geom_boxplot(data=ndv_ITS_leaf,aes(x=factor(0),y=NDV),colour="black", fill="#009E73", alpha=0.6) +
geom_point(data=ndv_ITS_leaf,aes(x=factor(0),y=NDV),colour="black", position="jitter")+
geom_boxplot(data=ndv_ITS_root,aes(x=factor(1),y=NDV),colour="black",fill="#E69F00",  alpha=0.6)+
geom_point(data=ndv_ITS_root,aes(x=factor(1),y=NDV),colour="black", position="jitter")+
scale_x_discrete(breaks=c(0,1),labels=c("Leaf","Root"))+
# ggtitle("Fungi null beta-distribution")+
annotate("text",x=1.5,y=1,label="t = -18.01, df = 106", size = 6)+
annotate("text",x=1.5,y=0.9,label="P < 2.2e-16", size = 6)+
theme_minimal(base_size =25)+
theme(axis.title.x = element_blank())+
ylim(0.2, 1.05)
plot_ITS
ggsave("./results/plot_ITS_ndv.jpeg", plot_ITS)
#16S
load("./results/null/bray_NDV_16S_leaf.RData") #leaf
load("./results/null/bray_NDV_16S_root.RData") #root
boxplot(bray_abund_null_dev_fun, bray_abund_null_dev_fun_root,outline=FALSE)
t.test(bray_abund_null_dev_fun,bray_abund_null_dev_fun_root, alternative = "two.sided", var.equal = FALSE)
ndv_16S_leaf <-data.frame(bray_abund_null_dev_fun)
ndv_16S_root <-data.frame(bray_abund_null_dev_fun_root)
colnames(ndv_16S_leaf)<-c("NDV")
colnames(ndv_16S_root)<-c("NDV")
plot_16S <- ggplot()+
geom_boxplot(data=ndv_16S_leaf,aes(x=factor(0),y=NDV),colour="black", fill="#009E73", alpha=0.6) +
geom_point(data=ndv_16S_leaf,aes(x=factor(0),y=NDV), position="jitter")+
geom_boxplot(data=ndv_16S_root,aes(x=factor(1),y=NDV),colour="black",fill="#E69F00",alpha=0.6)+
geom_point(data=ndv_16S_root,aes(x=factor(1),y=NDV), position="jitter")+
scale_x_discrete(breaks=c(0,1),labels=c("Leaf","Root"))+
#ggtitle("Bacteria null beta-distribution")+
annotate("text",x=1.5,y=1,label="t = -1.8, df = 103", size = 6)+
annotate("text",x=1.5,y=0.9,label="P = 0.24", size = 6)+
theme_minimal(base_size = 25)+
theme(axis.title.x = element_blank())+
ylim(0.2, 1.05)
#plot together
text<- "A. Niche or neutral processes"
# Create a text grob
tgrob <- text_grob(text,size = 20)
# Draw the text
plot_0 <- as_ggplot(tgrob) + theme(plot.margin = margin(0,0,0,2, "cm"))
NDV_plot <- ggarrange(plot_0,NULL, plot_16S,plot_ITS,
labels = c("", "", "Bacteria", "Fungi"),                      ncol = 2, nrow = 2, font.label = list(face="italic"), heights= c(1,3))
NDV_plot
#ggsave(filename = "NDV.png", plot = NDV_plot, bg = "white", width = 10, height = 8, dpi = 600)
library(ape)
library(iCAMP)
library(NST) # need to be NST >=3.1.3
#Bootstrapping is an excellent method to evaluate the statistical variation. Since the observed/null dissimilarity values are not independent (pairwise comparisons), bootstrapping should be random draw of samples rather than the pairwise values.
nst.result <- load("D:/Sophie_pipeline/obitools/NST/mydata_fungi_rand1000.tNST.rda")
nst_boot <-nst.boot(nst.result = nst,group = NULL, rand = 100, trace = T,out.detail = T) #need out.detail= T, to output details rather than just summarized results.
#plot together
NDV_plot <- ggarrange(plot_16S,plot_ITS,
labels = c("Bacteria", "Fungi"),                      ncol = 2, nrow = 2, font.label = list(face="italic"))
NDV_plot
#plot together
NDV_plot <- ggarrange(plot_16S,plot_ITS,
labels = c("Bacteria", "Fungi"),                      ncol = 2, nrow = 1, font.label = list(face="italic"))
NDV_plot
#plot
nst$index.grp$NST.i.bray #bargraph
nst_boot$detail$NST.boot$leaf #boxplot
t.test(nst_boot$detail$NST.boot$leaf,nst_boot$detail$NST.boot$root, alternative = "two.sided", var.equal = FALSE)
data <- nst_boot$detail$NST.boot %>%
as.data.frame() %>%
pivot_longer(cols = c("leaf", "root"), names_to = "organ")%>%
rename("NST" = "value")
data$kingdom <- "fungi"
fungi_plot_nst <- ggplot(data) +
aes(x = organ, y = NST, fill = organ) +
geom_boxplot(alpha=0.7) +
# geom_hline(yintercept=0.5, linetype= "dashed", color="black")+
scale_fill_manual(values = c(leaf = "#009E73",
root = "#E69F00")) +
geom_point(position= "jitter")+
#ggtitle('NST for fungi, 1000 rand. + bootstrap')+
theme_minimal(base_size = 25)+
theme(axis.title.x = element_blank(), legend.position = "none")+
annotate("text",x=1.5,y=1.01,label="t = -37.4, df = 153.9", size = 6)+
annotate("text",x=1.5,y=0.97,label="P < 2.2e-16", size = 6)+
ylim(0.55, 1.03)#ajout de determinisme et stochasticité avec fleche sur la droite du graphe
fungi_plot_nst
fungi_plot_nst <- ggplot(data) +
aes(x = organ, y = NST, fill = organ) +
geom_boxplot(alpha=0.7) +
# geom_hline(yintercept=0.5, linetype= "dashed", color="black")+
scale_fill_manual(values = c(leaf = "#009E73",
root = "#E69F00")) +
geom_point(position= "jitter")+
#ggtitle('NST for fungi, 1000 rand. + bootstrap')+
theme_minimal(base_size = 25)+
theme(axis.title.x = element_blank(), legend.position = "none")+
annotate("text",x=1.5,y=1.01,label="t = -37.4, df = 153.9", size = 6)+
annotate("text",x=1.5,y=0.97,label="P < 2.2e-16", size = 6)+
scale_x_discrete(labels = c(leaf = "Leaf", root = "Root"))+
ylim(0.55, 1.03)#ajout de determinisme et stochasticité avec fleche sur la droite du graphe
fungi_plot_nst
#load data bacteria and match IDs
load("D:/Sophie_pipeline/obitools/resources/Metabarlist_natura_clean_16S_traits.Rdata")
bacteria <- natura_clean
comm.bacteria <- (bacteria$reads)
sample.bacteria = bacteria$pcrs[,c(1,4)]
sample.bacteria.2 <- subset(sample.bacteria, select=c(organ))
#Bootstrapping
nst.result <- load("D:/Sophie_pipeline/obitools/NST/mydata_bacteria_rand1000.tNST.rda")
nst_boot <-nst.boot(nst.result = nst,group = NULL, rand = 100, trace = T,out.detail = T) #need out.detail= T, to output details rather than just summarized results.
t.test(nst_boot$detail$NST.boot$leaf,nst_boot$detail$NST.boot$root, alternative = "two.sided", var.equal = FALSE)
data_bac <- nst_boot$detail$NST.boot %>%
as.data.frame() %>%
pivot_longer(cols = c("leaf", "root"), names_to = "organ")%>%
rename("NST" = "value")
data$kingdom <- "bacteria"
bacteria_plot_nst <- ggplot(data_bac) +
aes(x = organ, y = NST, fill = organ) +
geom_boxplot(alpha=0.7) +
# geom_hline(yintercept=0.5, linetype= "dashed", color="black")+
scale_fill_manual(values = c(leaf = "#009E73",
root = "#E69F00")) +
geom_point(position= "jitter")+
#ggtitle('NST for fungi, 1000 rand. + bootstrap')+
theme_minimal(base_size = 20)+
theme(axis.title.x = element_blank(), legend.position = "none")+
annotate("text",x=1.5,y=1.01,label="t = -0.2, df = 173.7", size = 6)+
annotate("text",x=1.5,y=0.97,label="P=0.8", size = 6)+
scale_x_discrete(labels = c(leaf = "Leaf", root = "Root"))+
ylim(0.55, 1.03)
bacteria_plot_nst
#plot together
NST_plot <- ggarrange(bacteria_plot_nst,fungi_plot_nst,
labels = c("Bacteria", "Fungi"),                      ncol = 2, nrow = 1, font.label = list(face="italic"))
NST_plot
bacteria_plot_nst <- ggplot(data_bac) +
aes(x = organ, y = NST, fill = organ) +
geom_boxplot(alpha=0.7) +
# geom_hline(yintercept=0.5, linetype= "dashed", color="black")+
scale_fill_manual(values = c(leaf = "#009E73",
root = "#E69F00")) +
geom_point(position= "jitter")+
#ggtitle('NST for fungi, 1000 rand. + bootstrap')+
theme_minimal(base_size = 25)+
theme(axis.title.x = element_blank(), legend.position = "none")+
annotate("text",x=1.5,y=1.01,label="t = -0.2, df = 173.7", size = 6)+
annotate("text",x=1.5,y=0.97,label="P=0.8", size = 6)+
scale_x_discrete(labels = c(leaf = "Leaf", root = "Root"))+
ylim(0.55, 1.03)
#plot together
NST_plot <- ggarrange(bacteria_plot_nst,fungi_plot_nst,
labels = c("Bacteria", "Fungi"),                      ncol = 2, nrow = 1, font.label = list(face="italic"))
NST_plot
assemblage_plot <- ggarrange(NDV_plot, NST_plot, ncol = 1, nrow = 2, labels = c("A. Niche or neutral processes","B. Stochastic or deterministic assembly"))
assemblage_plot
assemblage_plot <- ggarrange(NDV_plot, NST_plot, ncol = 1, nrow = 2,
labels = c("A. Niche or neutral processes","B. Stochastic or deterministic assembly"),
top = c("A", "B"),
heights = c(0.5, 0.5))
assemblage_plot <- ggarrange(NDV_plot, NST_plot, ncol = 1, nrow = 2,
labels = c("A. Niche or neutral processes","B. Stochastic or deterministic assembly"),
top = c("A", "B"),
heights = c(0.5, 0.5))
assemblage_plot
assemblage_plot <- ggarrange(NDV_plot, NST_plot, ncol = 1, nrow = 2,
labels = c("A. Niche or neutral processes","B. Stochastic or deterministic assembly"),
heights = c(0.5, 0.5)) # Adjust heights as needed
assemblage_plot_with_labels <- annotate_figure(assemblage_plot,
top = textGrob("A. Niche or neutral processes", gp = gpar(fontsize = 14)),
bottom = textGrob("B. Stochastic or deterministic assembly", gp = gpar(fontsize = 14)),
left = NULL, right = NULL)
assemblage_plot_with_labels
assemblage_plot
library(ggpubr)
assemblage_plot <- ggarrange(NDV_plot, NST_plot, ncol = 1, nrow = 2,
labels = c("A. Niche or neutral processes","B. Stochastic or deterministic assembly"),
heights = c(0.5, 0.5)) # Adjust heights as needed
assemblage_plot_with_labels <- annotate_figure(assemblage_plot,
top = textGrob("A. Niche or neutral processes", gp = gpar(fontsize = 14)),
bottom = textGrob("B. Stochastic or deterministic assembly", gp = gpar(fontsize = 14)),
left = NULL, right = NULL)
assemblage_plot <- ggarrange(NDV_plot, NST_plot, ncol = 1, nrow = 2, labels = c("A. Niche or neutral processes","B. Stochastic or deterministic assembly"), vjust = c(0,0))
assemblage_plot
assemblage_plot <- ggarrange(NDV_plot, NST_plot, ncol = 1, nrow = 2, labels = c("A. Niche or neutral processes","B. Stochastic or deterministic assembly"), vjust = c(-1,0))
assemblage_plot
assemblage_plot <- ggarrange(NDV_plot, NST_plot, ncol = 1, nrow = 2, labels = c("A. Niche or neutral processes","B. Stochastic or deterministic assembly"), vjust = c(-0.5,0))
assemblage_plot
assemblage_plot <- ggarrange(NDV_plot, NST_plot, ncol = 1, nrow = 2, labels = c("A. Niche or neutral processes","B. Stochastic or deterministic assembly"), vjust = c(-0.1,0))
assemblage_plot
assemblage_plot <- ggarrange(NDV_plot, NST_plot, ncol = 1, nrow = 2, labels = c("A. Niche or neutral processes","B. Stochastic or deterministic assembly"), vjust = c(-0,0))
assemblage_plot
assemblage_plot <- ggarrange(NDV_plot, NST_plot, ncol = 1, nrow = 2, labels = c("A. Niche or neutral processes","B. Stochastic or deterministic assembly"), vjust = c(0,0))
assemblage_plot
assemblage_plot <- ggarrange(NDV_plot, NST_plot, ncol = 1, nrow = 2, labels = c("A. Niche or neutral processes","B. Stochastic or deterministic assembly"), vjust = c(0,0), hjust = c(0,0))
assemblage_plot
assemblage_plot <- ggarrange(NDV_plot, NST_plot, ncol = 1, nrow = 2, labels = c("A. Niche or neutral processes","B. Stochastic or deterministic assembly"), vjust = c(3,0), hjust = c(0,0))
assemblage_plot
assemblage_plot <- ggarrange(NDV_plot, NST_plot, ncol = 1, nrow = 2, labels = c("A. Niche or neutral processes","B. Stochastic or deterministic assembly"), vjust = c(1,0), hjust = c(0,0))
assemblage_plot
ggsave(filename = "NST_NDV.png", plot =assemblage_plot, bg = "white", width = 10, height = 8, dpi = 600)
plot_ITS <- ggplot()+
geom_boxplot(data=ndv_ITS_leaf,aes(x=factor(0),y=NDV),colour="black", fill="#009E73", alpha=0.6) +
geom_point(data=ndv_ITS_leaf,aes(x=factor(0),y=NDV),colour="black", position="jitter")+
geom_boxplot(data=ndv_ITS_root,aes(x=factor(1),y=NDV),colour="black",fill="#E69F00",  alpha=0.6)+
geom_point(data=ndv_ITS_root,aes(x=factor(1),y=NDV),colour="black", position="jitter")+
#scale_x_discrete(breaks=c(0,1),labels=c("Leaf","Root"))+
scale_x_discrete(position="none")+
# ggtitle("Fungi null beta-distribution")+
annotate("text",x=1.5,y=1,label="t = -18.01, df = 106", size = 6)+
annotate("text",x=1.5,y=0.9,label="P < 2.2e-16", size = 6)+
theme_minimal(base_size =25)+
theme(axis.title.x = element_blank())+
ylim(0.2, 1.05)
plot_ITS <- ggplot()+
geom_boxplot(data=ndv_ITS_leaf,aes(x=factor(0),y=NDV),colour="black", fill="#009E73", alpha=0.6) +
geom_point(data=ndv_ITS_leaf,aes(x=factor(0),y=NDV),colour="black", position="jitter")+
geom_boxplot(data=ndv_ITS_root,aes(x=factor(1),y=NDV),colour="black",fill="#E69F00",  alpha=0.6)+
geom_point(data=ndv_ITS_root,aes(x=factor(1),y=NDV),colour="black", position="jitter")+
#scale_x_discrete(breaks=c(0,1),labels=c("Leaf","Root"))+
scale_x_discrete(breaks = c("leaf", "root"), labels = c("", ""))+
# ggtitle("Fungi null beta-distribution")+
annotate("text",x=1.5,y=1,label="t = -18.01, df = 106", size = 6)+
annotate("text",x=1.5,y=0.9,label="P < 2.2e-16", size = 6)+
theme_minimal(base_size =25)+
theme(axis.title.x = element_blank())+
ylim(0.2, 1.05)
plot_ITS
plot_16S <- ggplot()+
geom_boxplot(data=ndv_16S_leaf,aes(x=factor(0),y=NDV),colour="black", fill="#009E73", alpha=0.6) +
geom_point(data=ndv_16S_leaf,aes(x=factor(0),y=NDV), position="jitter")+
geom_boxplot(data=ndv_16S_root,aes(x=factor(1),y=NDV),colour="black",fill="#E69F00",alpha=0.6)+
geom_point(data=ndv_16S_root,aes(x=factor(1),y=NDV), position="jitter")+
#scale_x_discrete(breaks=c(0,1),labels=c("Leaf","Root"))+
scale_x_discrete(breaks = c("leaf", "root"), labels = c("", ""))+
#ggtitle("Bacteria null beta-distribution")+
annotate("text",x=1.5,y=1,label="t = -1.8, df = 103", size = 6)+
annotate("text",x=1.5,y=0.9,label="P = 0.24", size = 6)+
theme_minimal(base_size = 25)+
theme(axis.title.x = element_blank())+
ylim(0.2, 1.05)
#plot together
NDV_plot <- ggarrange(plot_16S,plot_ITS,
labels = c("Bacteria", "Fungi"),                      ncol = 2, nrow = 1, font.label = list(face="italic"))
NDV_plot
assemblage_plot <- ggarrange(NDV_plot, NST_plot, ncol = 1, nrow = 2, labels = c("A. Niche or neutral processes","B. Stochastic or deterministic assembly"), vjust = c(1,0), hjust = c(0,0))
assemblage_plot
assemblage_plot_with_bigger_labels <- assemblage_plot +
theme(axis.text.x = element_text(size = 16)) +
theme(axis.text.y = element_text(size = 16))
assemblage_plot_with_bigger_labels
ggarrange(plot1,plot2,
common.legend=TRUE,
hjust=-0.8,
ncol =1 , nrow = 2)
plot1 <- NDV_plot + theme(legend.position="left")+
labs(title="asdf")
plot2 <- NST_plot + theme(legend.position="left")+
labs(title="asdf")
ggarrange(plot1,plot2,
common.legend=TRUE,
hjust=-0.8,
ncol =1 , nrow = 2)
plot2
plot2 <- NST_plot + labs(title="asdf")
plot2
plot2 <- NST_plot + ggtitle("fgfdg")
plot2
NST_plot + ggtitle("fgfdg")
plot2 <- NST_plot + labs(title="fgfdg")
plot2
plot2 <- NST_plot + opts(title="Title text")
plot2
NST_plot +  labs(title="asdf")
plot1 <- annotate_figure(NDV_plot,                                            top = textGrob("Your Combined Plot Title", gp = gpar(fontsize = 14)))
annotate_figure(NDV_plot,
top = textGrob("Your Combined Plot Title", gp = gpar(fontsize = 14)))
assemblage_plot <- ggarrange(NDV_plot, NST_plot, ncol = 1, nrow = 2, labels = c("A. Niche or neutral processes","B. Stochastic or deterministic assembly"), vjust = c(1,0), hjust = c(0,0))
assemblage_plot
assemblage_plot <- ggarrange(NDV_plot, NST_plot, ncol = 1, nrow = 2, labels = c("A. Niche or neutral processes","B. Stochastic or deterministic assembly"), vjust = c(1,0), hjust = c(0,0), font.label = list(size= 20))
assemblage_plot
assemblage_plot <- ggarrange(NDV_plot, NST_plot, ncol = 1, nrow = 2, labels = c("A. Niche or neutral processes","B. Stochastic or deterministic assembly"), vjust = c(1,0), hjust = c(0,0), font.label = list(size= 20), heights = c(0,0))
assemblage_plot
assemblage_plot <- ggarrange(NDV_plot, NST_plot, ncol = 1, nrow = 2, labels = c("A. Niche or neutral processes","B. Stochastic or deterministic assembly"), vjust = c(1,0), hjust = c(0,0), font.label = list(size= 20), heights = c(2,3))
assemblage_plot
assemblage_plot <- ggarrange(NULL, NDV_plot, NULL, NST_plot, ncol = 1, nrow = 2, labels = c("A. Niche or neutral processes","B. Stochastic or deterministic assembly"), vjust = c(1,0), hjust = c(0,0), font.label = list(size= 20), heights = c(1,2,1,2))
assemblage_plot
assemblage_plot <- ggarrange(NULL, NDV_plot, NULL, NST_plot, ncol = 1, nrow = 2, labels = c("","A. Niche or neutral processes","","B. Stochastic or deterministic assembly"), vjust = c(1,0), hjust = c(0,0), font.label = list(size= 20), heights = c(1,2,1,2))
assemblage_plot
assemblage_plot <- ggarrange(NULL, NDV_plot, NULL, NST_plot, ncol = 1, nrow = 2, labels = c("","A. Niche or neutral processes","","B. Stochastic or deterministic assembly"), font.label = list(size= 20), heights = c(1,2,1,2))
assemblage_plot
assemblage_plot <- ggarrange(NULL, NDV_plot, NULL, NST_plot, ncol = 1, nrow = 4, labels = c("","A. Niche or neutral processes","","B. Stochastic or deterministic assembly"), font.label = list(size= 20), heights = c(1,2,1,2))
assemblage_plot
assemblage_plot <- ggarrange(NULL, NDV_plot, NULL, NST_plot, ncol = 1, nrow = 4, labels = c("","A. Niche or neutral processes","","B. Stochastic or deterministic assembly"),vjust = c(1,0), hjust = c(0,0), font.label = list(size= 20), heights = c(1,2,1,2))
assemblage_plot
assemblage_plot <- ggarrange(NULL, NDV_plot, NULL, NST_plot, ncol = 1, nrow = 4, labels = c("","A. Niche or neutral processes","","B. Stochastic or deterministic assembly"),vjust = c(1,0), hjust = c(0,0), font.label = list(size= 20), heights = c(0.5,2,0.5,2))
assemblage_plot
assemblage_plot <- ggarrange(NULL, NDV_plot, NULL, NST_plot, ncol = 1, nrow = 4, labels = c("","A. Niche or neutral processes","","B. Stochastic or deterministic assembly"),vjust = c(1,0), hjust = c(0,0), font.label = list(size= 20), heights = c(0.3,2,0.3,2))
assemblage_plot
assemblage_plot <- ggarrange(NULL, NDV_plot, NULL, NST_plot, ncol = 1, nrow = 4, labels = c("","A. Niche or neutral processes","","B. Stochastic or deterministic assembly"),vjust = c(2,0), hjust = c(0,0), font.label = list(size= 20), heights = c(0.3,2,0.3,2))
assemblage_plot
assemblage_plot <- ggarrange(NULL, NDV_plot, NULL, NST_plot, ncol = 1, nrow = 4, labels = c("","A. Niche or neutral processes","","B. Stochastic or deterministic assembly"),vjust = c(0,0), hjust = c(0,0), font.label = list(size= 20), heights = c(0.3,2,0.3,2))
assemblage_plot
assemblage_plot <- ggarrange(NULL, NDV_plot, NULL, NST_plot, ncol = 1, nrow = 4, labels = c("","A. Niche or neutral processes","","B. Stochastic or deterministic assembly"),vjust = c(0,1), hjust = c(0,0), font.label = list(size= 20), heights = c(0.3,2,0.3,2))
assemblage_plot
assemblage_plot <- ggarrange(NULL, NDV_plot, NULL, NST_plot, ncol = 1, nrow = 4, labels = c("","A. Niche or neutral processes","","B. Stochastic or deterministic assembly"),vjust = c(0,-1), hjust = c(0,0), font.label = list(size= 20), heights = c(0.3,2,0.3,2))
assemblage_plot
assemblage_plot <- ggarrange(NULL, NDV_plot, NULL, NST_plot, ncol = 1, nrow = 4, labels = c("","A. Niche or neutral processes","","B. Stochastic or deterministic assembly"),vjust = c(0,-0.8), hjust = c(0,0), font.label = list(size= 20), heights = c(0.3,2,0.3,2))
assemblage_plot
assemblage_plot <- ggarrange(NULL, NDV_plot, NULL, NST_plot, ncol = 1, nrow = 4, labels = c("","A. Niche or neutral processes","","B. Stochastic or deterministic assembly"),vjust = c(0,-0.8), hjust = c(0,2), font.label = list(size= 20), heights = c(0.3,2,0.3,2))
assemblage_plot
assemblage_plot <- ggarrange(NULL, NDV_plot, NULL, NST_plot, ncol = 1, nrow = 4, labels = c("","A. Niche or neutral processes","","B. Stochastic or deterministic assembly"),vjust = c(0,-0.8), hjust = c(0,1), font.label = list(size= 20), heights = c(0.3,2,0.3,2))
assemblage_plot
assemblage_plot <- ggarrange(NULL, NDV_plot, NULL, NST_plot, ncol = 1, nrow = 4, labels = c("","A. Niche or neutral processes","","B. Stochastic or deterministic assembly"),vjust = c(0,-0.8), hjust = c(0,-1), font.label = list(size= 20), heights = c(0.3,2,0.3,2))
assemblage_plot
assemblage_plot <- ggarrange(NULL, NDV_plot, NULL, NST_plot, ncol = 1, nrow = 4, labels = c("","A. Niche or neutral processes","","B. Stochastic or deterministic assembly"),vjust = c(0,-0.8), hjust = c(0,-7), font.label = list(size= 20), heights = c(0.3,2,0.3,2))
assemblage_plot
assemblage_plot <- ggarrange(NULL, NDV_plot, NULL, NST_plot, ncol = 1, nrow = 4, labels = c("","A. Niche or neutral processes","","B. Stochastic or deterministic assembly"),vjust = c(0,-0.8), hjust = c(0,0), font.label = list(size= 20), heights = c(0.3,2,0.3,2))
assemblage_plot
ggsave(filename = "NST_NDV.png", plot =assemblage_plot, bg = "white", width = 10, height = 8, dpi = 600)
