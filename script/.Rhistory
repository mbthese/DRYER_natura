ngsfilter <- read.csv("~/Desktop/DRYER_natura_data/ngs_filter_final2.csv")
ngsfilter <-as.data.frame(sapply(ngsfilter, function(x) gsub("\"", "", x)))
#ngsfilter
ngsfilter <- read.csv("~/Desktop/DRYER_natura_data/ngs_filter_final2.csv")
ngsfilter <-as.data.frame(sapply(ngsfilter, function(x) gsub("\"", "", x)))
View(ngsfilter)
View(ngsfilter)
View(ngsfilter)
ngsfilter <- ngsfilter %>%
mutate(tag = paste0(barcode_forward, ":", barcode_reverse)) %>%
mutate(sample_id = sample_name) %>%
mutate(type = sample_type)
ngsfilter <- ngsfilter %>%
mutate(tag = paste0(barcode_forward, ":", barcode_reverse)) %>%
mutate(sample_name =sample_id) %>%
mutate(type = sample_type)
ngsfilter <- ngsfilter %>%
mutate(tag = paste0(barcode_forward, ":", barcode_reverse)) %>%
mutate(sample_id = samples_name) %>%
mutate(type = sample_type)
ngsfilter <- ngsfilter %>%
mutate(tag = paste0(barcode_forward, ":", barcode_reverse)) %>%
mutate(sample_id = samples_name) %>%
mutate(type = sample_type) %>%
mutate(type = ifelse(type %% 'sample' == 0,NA,"control"))
ngsfilter <- ngsfilter %>%
mutate(tag = paste0(barcode_forward, ":", barcode_reverse)) %>%
mutate(sample_id = samples_name) %>%
mutate(type = sample_type) %>%
mutate(type = ifelse(type %in% 'sample',NA,"control"))
View(ngsfilter)
#ngsfilter
ngsfilter <- read.csv("~/Desktop/DRYER_natura_data/ngs_filter_final2.csv")
ngsfilter <-as.data.frame(sapply(ngsfilter, function(x) gsub("\"", "", x)))
ngsfilter <- ngsfilter %>%
mutate(tag = paste0(barcode_forward, ":", barcode_reverse)) %>%
mutate(sample_id = samples_name) %>%
mutate(type = sample_type) %>%
mutate(control_type = ifelse(type %in% 'sample',NA,"control"))
View(ngsfilter)
ngsfilter <- ngsfilter %>%
mutate(tag = paste0(barcode_forward, ":", barcode_reverse)) %>%
mutate(sample_id = samples_name) %>%
mutate(type = sample_type) %>%
mutate(control_type = ifelse(type %in% 'sample',NA,"control")) %>%
mutate(control_type = ifelse(sample_type %in% 'control_extraction', "extraction", "control"))
View(ngsfilter)
ngsfilter <- ngsfilter %>%
mutate(tag = paste0(barcode_forward, ":", barcode_reverse)) %>%
mutate(sample_id = samples_name) %>%
mutate(type = sample_type) %>%
mutate(control_type = ifelse(type %in% 'sample',NA,"control"))
ngsfilter$control_type =="extraction"
ngsfilter$control_type <-"extraction"
View(ngsfilter)
if(ngsfilter$sample_type %in% "control_extraction"{
ngsfilter$control_type ="extraction"
if(ngsfilter$sample_type == "control_extraction"{
ngsfilter <- ngsfilter %>%
mutate(tag = paste0(barcode_forward, ":", barcode_reverse)) %>%
mutate(sample_id = samples_name) %>%
mutate(type = sample_type) %>%
mutate(control_type = ifelse(type %in% 'sample',NA,"control"))
ngsfilter$sample_type
#ngsfilter
ngsfilter <- read.csv("~/Desktop/DRYER_natura_data/ngs_filter_final2.csv")
ngsfilter <-as.data.frame(sapply(ngsfilter, function(x) gsub("\"", "", x)))
ngsfilter <- ngsfilter %>%
mutate(tag = paste0(barcode_forward, ":", barcode_reverse)) %>%
mutate(sample_id = samples_name) %>%
mutate(type = sample_type) %>%
mutate(control_type = ifelse(type %in% 'sample',NA,
ifelse(sample_type %in% 'control_extraction', 'extraction', 'pcr' )))
View(ngsfilter)
ngsfilter <- ngsfilter %>%
mutate(tag = paste0(barcode_forward, ":", barcode_reverse)) %>%
mutate(sample_id = samples_name) %>%
mutate(type = ifelse(sample_type %in% 'sample', 'sample', 'control')) %>%
mutate(control_type = ifelse(type %in% 'sample',NA,
ifelse(sample_type %in% 'control_extraction', 'extraction', 'pcr' )))
ngsfilter <- ngsfilter %>%
mutate(tag = paste0(barcode_forward, ":", barcode_reverse)) %>%
mutate(sample_id = samples_name) %>%
mutate(type = ifelse(sample_type %in% 'sample', 'sample', 'control')) %>%
mutate(control_type = ifelse(type %in% 'sample',NA,
ifelse(sample_type %in% 'control_extraction', 'extraction', 'pcr' ))) %>%
select(sample_id, type, control_type)
pcrs<- ngsfilter %>%
mutate(tag = paste0(barcode_forward, ":", barcode_reverse)) %>%
mutate(sample_id = samples_name) %>%
mutate(type = ifelse(sample_type %in% 'sample', 'sample', 'control')) %>%
mutate(control_type = ifelse(type %in% 'sample',NA,
ifelse(sample_type %in% 'control_extraction', 'extraction', 'pcr' ))) %>%
select(sample_id, type, control_type)
#ngsfilter
ngsfilter <- read.csv("~/Desktop/DRYER_natura_data/ngs_filter_final2.csv")
ngsfilter <-as.data.frame(sapply(ngsfilter, function(x) gsub("\"", "", x)))
pcrs <- ngsfilter %>%
mutate(tag = paste0(barcode_forward, ":", barcode_reverse)) %>%
mutate(sample_id = samples_name) %>%
mutate(type = ifelse(sample_type %in% 'sample', 'sample', 'control')) %>%
mutate(control_type = ifelse(type %in% 'sample',NA,
ifelse(sample_type %in% 'control_extraction', 'extraction', 'pcr' ))) %>%
select(sample_id, type, control_type)
write_table(pcrs, file= "pcrs.txt")
write.table(pcrs, file= "pcrs.txt")
#samples
file_samples <- read_delim("~/Desktop/Sophie_pipeline/obitools/resources/DRYER_natura/DRYER_natura_ngsfilter.txt",
"\t", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE) %>%
rename(samples =X2)
View(file_samples)
#samples
file_samples <- ngsfilter <- read.csv("~/Desktop/DRYER_natura_data/ngs_filter_final2.csv")
#samples
file_samples <- read.csv("~/Desktop/DRYER_natura_data/ngs_filter_final2.csv")
file_samples <-as.data.frame(sapply(file_samples, function(x) gsub("\"", "", x)))
View(file_samples)
file_samples %>%
select(project, organ, marker, samples_name, Familyn Genus, Species)
file_samples %>%
select(project, organ, marker, samples_name, Family, Genus, Species)
file_samples  <- file_samples %>%
select(project, organ, marker, samples_name, Family, Genus, Species)
file_samples  <- file_samples %>%
select(project, organ, marker, samples_name, Family, Genus, Species) %>%
rename(sample_id = samples_name)
file_samples  <- file_samples %>%
select(project, organ, marker, samples_name, Family, Genus, Species) %>%
rename(sample_id = samples_name) %>%
relocate(sample_id, .before = project)
#samples
file_samples <- read.csv("~/Desktop/DRYER_natura_data/ngs_filter_final2.csv")
file_samples <-as.data.frame(sapply(file_samples, function(x) gsub("\"", "", x)))
file_samples  <- file_samples %>%
select(project, organ, marker, samples_name, Family, Genus, Species) %>%
rename(sample_id = samples_name) %>%
relocate(sample_id, .before = project)
write.table(file_samples, file = "file_samples.txt")
MetabarList <- obifiles_to_metabarlist(
file_obitab = "../results/DRYER_natura/DRYER_natura_R1R2_good_demultiplexed_derepl_basicfilt_cl_agg.tab",
file_ngsfilter = "../resources/DRYER_natura/pcrs.txt",
file_samples =  "../resources/DRYER_natura/file_samples.txt" ,sep="\t")
bozo <- read_delim("../results/DRYER_natura/DRYER_natura_R1R2_good_demultiplexed_derepl_basicfilt_cl_agg.tab", escape_double = F, trim_ws = T)
bozo <- read_delim("../results/DRYER_natura/DRYER_natura_R1R2_good_demultiplexed_derepl_basicfilt_cl_agg.tab", escape_double = F, trim_ws = T, delim ="\t")
View(bozo)
#samples file preparation for the conversion
file_samples <- read.csv("~/Desktop/DRYER_natura_data/ngs_filter_final2.csv")
file_samples <-as.data.frame(sapply(file_samples, function(x) gsub("\"", "", x)))
file_samples  <- file_samples %>%
select(project, organ, marker, samples_name, Family, Genus, Species) %>%
rename(sample_id = samples_name) %>%
relocate(sample_id, .before = project)
#ngsfilter preparation for the conversion
ngsfilter <- read.csv("~/Desktop/DRYER_natura_data/ngs_filter_final2.csv")
ngsfilter <-as.data.frame(sapply(ngsfilter, function(x) gsub("\"", "", x)))
pcrs <- ngsfilter %>%
mutate(tag = paste0(barcode_forward, ":", barcode_reverse)) %>%
mutate(sample_id = samples_name) %>%
mutate(type = ifelse(sample_type %in% 'sample', 'sample', 'control')) %>%
mutate(control_type = ifelse(type %in% 'sample',NA,
ifelse(sample_type %in% 'control_extraction', 'extraction', 'pcr' ))) %>%
select(sample_id, type, control_type)
View(ngsfilter)
View(pcrs)
View(file_samples)
?obifiles_to_metabarlist
View(pcrs)
View(file_samples)
pcrs$sample_id==file_samples$sample_id
View(bozo)
bozo2 <- bozo[,which(grepl('sample:',colnames(bozo))==T)]
View(bozo2)
rownames(bozo2) <- bozo$id
bozo2 <- t(bozo2)
View(bozo2)
motus <- bozo$sequence
motus
motus <- data.frame(sequence=bozo$sequence)
View(bozo2)
View(motus)
View(bozo)
afzdg <- metabarlist_generator(bozo2,motus,pcrs,file_samples)
View(bozo2)
rownames(motus) <- colnames(bozo2)
afzdg <- metabarlist_generator(bozo2,motus,pcrs,file_samples)
View(pcrs)
View(file_samples)
rownames(file_samples) <- file_samples$sample_id
afzdg <- metabarlist_generator(bozo2,motus,pcrs,file_samples)
View(afzdg)
rownames(motus) <- colnames(bozo2)
# Compute the number of reads per pcr
afzdg$pcrs$nb_reads <- rowSums(afzdg$reads)
# Compute the number of motus per pcr
afzdg$pcrs$nb_motus <- rowSums(afzdg$reads>0)
check1 <- melt(afzdg$pcrs[,c("control_type", "nb_reads", "nb_motus")])
ggplot(data <- check1, aes(x=control_type, y=value, color=control_type)) +
geom_boxplot() + theme_bw() +
geom_jitter(alpha=0.2) +
scale_color_manual(values = c("brown", "red", "cyan4","pink"), na.value = "darkgrey") +
facet_wrap(~variable, scales = "free_y") +
theme(axis.text.x = element_text(angle=45, h=1))
bozo <- read_delim("../results/DRYER_natura/DRYER_natura_R1R2_good_demultiplexed_derepl_basicfilt_cl_agg.tab", escape_double = F, trim_ws = T, delim ="\t")
bozo2 <- bozo[,which(grepl('sample:',colnames(bozo))==T)]
rownames(bozo2) <- bozo$id
View(bozo2)
motus <- data.frame(sequence=bozo$sequence)
motus <- data.frame(sequence=bozo$sequence)
rownames(motus) <- rownames(bozo2)
bozo2 <- t(bozo2)
rownames(file_samples) <- file_samples$sample_id
afzdg <- metabarlist_generator(bozo2,motus,pcrs,file_samples)
# Compute the number of reads per pcr
afzdg$pcrs$nb_reads <- rowSums(afzdg$reads)
# Compute the number of motus per pcr
afzdg$pcrs$nb_motus <- rowSums(afzdg$reads>0)
# Load requested package for plotting
library(ggplot2)
library(reshape2)
check1 <- melt(afzdg$pcrs[,c("control_type", "nb_reads", "nb_motus")])
ggplot(data <- check1, aes(x=control_type, y=value, color=control_type)) +
geom_boxplot() + theme_bw() +
geom_jitter(alpha=0.2) +
scale_color_manual(values = c("brown", "red", "cyan4","pink"), na.value = "darkgrey") +
facet_wrap(~variable, scales = "free_y") +
theme(axis.text.x = element_text(angle=45, h=1))
View(bozo2)
View(check1)
View(bozo)
bozo <- read_delim("../results/DRYER_natura/DRYER_natura_R1R2_good_demultiplexed_derepl_basicfilt_cl_agg.tab", escape_double = F, trim_ws = T, delim ="\t")
bozo2 <- bozo[,which(grepl('sample:',colnames(bozo))==T)]
View(bozo2)
colSums(bozo2)
bozo2 <- t(bozo2)
colSums(bozo2)
bozo <- read_delim("../results/DRYER_natura/DRYER_natura_R1R2_good_demultiplexed_derepl_basicfilt_cl_agg.tab", escape_double = F, trim_ws = T, delim ="\t")
bozo2 <- bozo[,which(grepl('sample:',colnames(bozo))==T)]
rownames(bozo2) <- bozo$id
motus <- data.frame(sequence=bozo$sequence)
rownames(motus) <- rownames(bozo2)
bozo2 <- t(bozo2)
rownames(file_samples) <- file_samples$sample_id
afzdg <- metabarlist_generator(bozo2,motus,pcrs,file_samples)
View(metabarlist_generator())
View(metabarlist_generator
)
match(rownames(pcrs), rownames(bozo2)
)
View(pcrs)
rownames(pcrs) <- rownames(bozo2)
bozo2 <- bozo[,which(grepl('sample:',colnames(bozo))==T)]
rownames(bozo2) <- bozo$id
motus <- data.frame(sequence=bozo$sequence)
rownames(motus) <- rownames(bozo2)
rownames(pcrs) <- rownames(bozo2)
bozo2 <- t(bozo2)
bozo2 <- bozo[,which(grepl('sample:',colnames(bozo))==T)]
rownames(bozo2) <- bozo$id
motus <- data.frame(sequence=bozo$sequence)
reads <- read_delim("../results/DRYER_natura/DRYER_natura_R1R2_good_demultiplexed_derepl_basicfilt_cl_agg.tab", escape_double = F, trim_ws = T, delim ="\t")
reads2 <- reads[,which(grepl('sample:',colnames(reads))==T)]
rownames(reads2) <- reads$id
reads2 <- t(reads2)
nrow(reads2)
nrow(pcrs)
inner_join(reads2, pcrs)
reads3 <- reads2[1,],
reads3 <- reads2[1,]
as.data.frame(reads3)
nrow(reads2)# 402
reads3 <- reads2[,1]
as.data.frame(reads3)
reads3 <- as.data.frame(reads3)
inner_join(reads3, pcrs)
View(reads3)
View(reads3)
rownames(reads2)
rownames(reads3)
rownames(pcrs)
rownames(pcrs) <- pcrs$sample_id
rownames(pcrs)
inner_join(reads3, pcrs)
rownames(reads3) <- pcrs$sample_id
rownames(reads3)
rownames(reads2)
rownames(pcrs) <- pcrs$sample_id
rownames(pcrs)
View(reads3)
essai <- rownames(reads3)
essai <- as.data.frame(rownames(reads3))
essai <- essai %>% rename(sample_id = `rownames(reads3)` )
inner_join(essai pcrs)
inner_join(essai, pcrs)
A <+ inner_join(essai, pcrs)
A < inner_join(essai, pcrs)
A <- inner_join(essai, pcrs)
View(essai)
library(stringr)
gsub('[sample:]','',essai$sample_id)
gsub('sample:','',essai$sample_id)
essai$sample_id <- gsub('sample:','',essai$sample_id)
A <- inner_join(essai, pcrs)
View(A)
A <- outer_join(essai, pcrs)
A <- anti_join(essai, pcrs)
A <- full_join(essai, pcrs)
View(A)
A <- full_join(essai, pcrs, by = 'sample_id')
A <- left_join(essai, pcrs, by = 'sample_id')
A <- right_join(essai, pcrs, by = 'sample_id')
View(A)
essai$col2 <- '5'
A <- right_join(essai, pcrs, by = 'sample_id')
View(A)
#removing missing from pcrs and file_samples
pcrs <- pcrs %>% filter(sample_id != "DRYER_natura_NA_16S_control_PCR_PCR-tags_21")
pcrs <- pcrs %>% filter(sample_id != "DRYER_natura_NA_16S_control_PCR_PCR-tags_22")
pcrs <- pcrs %>% filter(sample_id != "DRYER_natura_NA_16S_control_extraction_EXT_5")
pcrs <- pcrs %>% filter(sample_id != "DRYER_natura_NA_ITS2_control_extraction_EXT_5")
pcrs <- pcrs %>% filter(sample_id != "DRYER_natura_NA_ITS2_control_PCR_PCR-tags_21")
file_samples <- file_samples %>% filter(sample_id != "DRYER_natura_NA_16S_control_PCR_PCR-tags_21")
file_samples <- file_samples %>% filter(sample_id != "DRYER_natura_NA_16S_control_PCR_PCR-tags_22")
file_samples <- file_samples %>% filter(sample_id != "DRYER_natura_NA_16S_control_extraction_EXT_5")
file_samples <- file_samples %>% filter(sample_id != "DRYER_natura_NA_ITS2_control_extraction_EXT_5")
file_samples <- file_samples %>% filter(sample_id != "DRYER_natura_NA_ITS2_control_PCR_PCR-tags_21")
motus <- data.frame(sequence=reads$sequence)
rownames(motus) <- rownames(reads2)
rownames(pcrs) <- rownames(reads2)
reads2 <- t(reads2)
rownames(file_samples) <- file_samples$sample_id
metabarList <- metabarlist_generator(reads2,motus,pcrs,file_samples)
# Compute the number of reads per pcr
metabarList$pcrs$nb_reads <- rowSums(metabarList$reads)
# Compute the number of motus per pcr
metabarList$pcrs$nb_motus <- rowSums(metabarList$reads>0)
reads <- read_delim("../results/DRYER_natura/DRYER_natura_R1R2_good_demultiplexed_derepl_basicfilt_cl_agg.tab", escape_double = F, trim_ws = T, delim ="\t")
reads2 <- reads[,which(grepl('sample:',colnames(reads))==T)]
rownames(reads2) <- reads$id#i normally have 407 individuals, now i have 402 ! : problem. find out who is missing
reads2 <- t(reads2)
nrow(reads2)# 402
reads3 <- reads2[,1]
reads3 <- as.data.frame(reads3)
nrow(pcrs)#407
rownames(reads2)
essai <- as.data.frame(rownames(reads3))
essai <- essai %>% rename(sample_id = `rownames(reads3)` )
essai$sample_id <- gsub('sample:','',essai$sample_id)
essai$col2 <- '5'#just to add another column and see the missing individuals
A <- right_join(essai, pcrs, by = 'sample_id')
DRYER_natura_NA_16S_control_PCR_PCR-tags_21
DRYER_natura_NA_16S_control_PCR_PCR-tags_22
DRYER_natura_NA_16S_control_extraction_EXT_5
DRYER_natura_NA_ITS2_control_extraction_EXT_5
DRYER_natura_NA_ITS2_control_PCR_PCR-tags_21
#removing missing from pcrs and file_samples
pcrs <- pcrs %>% filter(sample_id != "DRYER_natura_NA_16S_control_PCR_PCR-tags_21")
pcrs <- pcrs %>% filter(sample_id != "DRYER_natura_NA_16S_control_PCR_PCR-tags_22")
pcrs <- pcrs %>% filter(sample_id != "DRYER_natura_NA_16S_control_extraction_EXT_5")
pcrs <- pcrs %>% filter(sample_id != "DRYER_natura_NA_ITS2_control_extraction_EXT_5")
pcrs <- pcrs %>% filter(sample_id != "DRYER_natura_NA_ITS2_control_PCR_PCR-tags_21")
file_samples <- file_samples %>% filter(sample_id != "DRYER_natura_NA_16S_control_PCR_PCR-tags_21")
file_samples <- file_samples %>% filter(sample_id != "DRYER_natura_NA_16S_control_PCR_PCR-tags_22")
file_samples <- file_samples %>% filter(sample_id != "DRYER_natura_NA_16S_control_extraction_EXT_5")
file_samples <- file_samples %>% filter(sample_id != "DRYER_natura_NA_ITS2_control_extraction_EXT_5")
file_samples <- file_samples %>% filter(sample_id != "DRYER_natura_NA_ITS2_control_PCR_PCR-tags_21")
motus <- data.frame(sequence=reads$sequence)
rownames(motus) <- rownames(reads2)
rownames(pcrs) <- rownames(reads2)
reads2 <- t(reads2)
rownames(file_samples) <- file_samples$sample_id
metabarList <- metabarlist_generator(reads2,motus,pcrs,file_samples)
colSums(reads2)
reads2 <- gsub('sample:','',reads2)
colSums(reads2)
reads <- read_delim("../results/DRYER_natura/DRYER_natura_R1R2_good_demultiplexed_derepl_basicfilt_cl_agg.tab", escape_double = F, trim_ws = T, delim ="\t")
reads2 <- reads[,which(grepl('sample:',colnames(reads))==T)]
reads2 <- t(reads2)
reads <- read_delim("../results/DRYER_natura/DRYER_natura_R1R2_good_demultiplexed_derepl_basicfilt_cl_agg.tab", escape_double = F, trim_ws = T, delim ="\t")
reads2 <- reads[,which(grepl('sample:',colnames(reads))==T)]
rownames(reads2)
reads2 <- t(reads2)
rownames(reads2)
nrow(reads2)# 402
nrow(reads2ùid)# 402
nrow(reads2$id)# 402
nrow(reads2)# 402
as.data.frame(reads2)
reads2 <- as.data.frame(reads2)
reads <- read_delim("../results/DRYER_natura/DRYER_natura_R1R2_good_demultiplexed_derepl_basicfilt_cl_agg.tab", escape_double = F, trim_ws = T, delim ="\t")
reads2 <- reads[,which(grepl('sample:',colnames(reads))==T)]
reads2 <- t(reads2)
rownames(reads2) <- reads$id#i normally have 407 individuals, now i have 402 ! : problem. find out who is missing
reads2 <- as.data.frame(reads2)
rownames(reads2) <- reads$id
nrow(reads2)# 402
rownames(reads2) <- reads$id
reads <- read_delim("../results/DRYER_natura/DRYER_natura_R1R2_good_demultiplexed_derepl_basicfilt_cl_agg.tab", escape_double = F, trim_ws = T, delim ="\t")
reads2 <- reads[,which(grepl('sample:',colnames(reads))==T)]
reads2 <- t(reads2)
rownames(reads2) <- reads$id#i normally have 407 individuals, now i have 402 ! : problem. find out who is missing
nrow(reads2)# 402
View(reads)
reads2 <- tail(data_frame, n =407) # extracting last row from the data frame
reads2 <- tail(reads, n =407) # extracting last row from the data frame
reads2 <- reads[,(ncol(reads)-n-20):ncol(reads)]
reads2 <- reads[,(ncol(reads)-n-1):ncol(reads)]
reads2 <- reads[,(ncol(reads)-20):ncol(reads)]
reads2 <- reads[,(ncol(reads)-407):ncol(reads)]
reads2 <- reads[,(ncol(reads)-410):ncol(reads)]
444-20
reads2 <- reads[,(ncol(reads)-430):ncol(reads)]
reads2 <- reads[,(ncol(reads)-431):ncol(reads)]
reads2 <- reads[,(ncol(reads)-429):ncol(reads)]
reads2 <- reads[,(ncol(reads)-426):ncol(reads)]
reads2 <- reads[,(ncol(reads)-424):ncol(reads)]
reads2 <- reads[,(ncol(reads)-423):ncol(reads)]
reads2 <- reads[,(ncol(reads)-425):ncol(reads)]
reads2 <- reads[,which(grepl('DRYER',colnames(reads))==T)]
reads3 <- reads[,(ncol(reads)-425):ncol(reads)]
reads3 <- reads[,(ncol(reads)-424):ncol(reads)]
reads3 <- reads[,(ncol(reads)-423):ncol(reads)]
reads2 <- t(reads2)
reads3 <- t(reads3)
View(reads)
reads <- read_delim("../results/DRYER_natura/DRYER_natura_R1R2_good_demultiplexed_derepl_basicfilt_cl_agg.tab", escape_double = F, trim_ws = T, delim ="\t")
reads3 <- reads[,(ncol(reads)-423):ncol(reads)]
reads2 <- reads[,which(grepl('DRYER',colnames(reads))==T)]
reads <- read_delim("../results/DRYER_natura/DRYER_natura_R1R2_good_demultiplexed_derepl_basicfilt_cl_agg.tab", escape_double = F, trim_ws = T, delim ="\t")
reads3 <- reads[,(ncol(reads)-423):ncol(reads)]
reads2 <- reads[,which(grepl('DRYER',colnames(reads))==T)]
reads3 <- reads[,(ncol(reads)-420):ncol(reads)]
reads3 <- reads[,(ncol(reads)-430):ncol(reads)]
reads2 <- reads[,which(grepl('DRYER',colnames(reads))==T)]
rownames(reads2) <- reads$id#i normally have 407 individuals, now i have 402 ! : problem. find out who is missing
View(reads2)
read2 <- gsub('sample:','',essai$sample_id)
/DRYER_natura_data/ngs_filter_final2.csv")
file_samples <- read.csv("~/Desktop/DRYER_natura_data/ngs_filter_final2.csv")
file_samples <-as.data.frame(sapply(file_samples, function(x) gsub("\"", "", x)))
file_samples  <- file_samples %>%
select(project, organ, marker, samples_name, Family, Genus, Species) %>%
rename(sample_id = samples_name) %>%
relocate(sample_id, .before = project)
#write.table(file_samples, file = "file_samples.txt")
#ngsfilter preparation for the conversion
ngsfilter <- read.csv("~/Desktop/DRYER_natura_data/ngs_filter_final2.csv")
ngsfilter <-as.data.frame(sapply(ngsfilter, function(x) gsub("\"", "", x)))
pcrs <- ngsfilter %>%
mutate(tag = paste0(barcode_forward, ":", barcode_reverse)) %>%
mutate(sample_id = samples_name) %>%
mutate(type = ifelse(sample_type %in% 'sample', 'sample', 'control')) %>%
mutate(control_type = ifelse(type %in% 'sample',NA,
ifelse(sample_type %in% 'control_extraction', 'extraction', 'pcr' ))) %>%
select(sample_id, type, control_type)
# reads3 <- reads2[,1]
# reads3 <- as.data.frame(reads3)
nrow(pcrs)#407
colnames(reads2) <- gsub('sample:','',colnames(reads2))
setdiff(colnames(reads2,pcrs$sample_id))
setdiff(colnames(reads2),pcrs$sample_id)
colnames(reads2)
pcrs$sample_id
setdiff(as.vector(colnames(reads2)),as.vector(pcrs$sample_id))
setdiff(as.vector(pcrs$sample_id),as.vector(colnames(reads2)))
View(pcrs)
pcrs <- dplyr::filter(pcrs, !sample_id %in% setdiff(as.vector(pcrs$sample_id),as.vector(colnames(reads2))))
rownames(motus) <- rownames(reads2)
motus <- data.frame(sequence=reads$sequence)
View(motus)
file_samples <- file_samples %>% filter(sample_id != "DRYER_natura_NA_16S_control_PCR_PCR-tags_21")
file_samples <- file_samples %>% filter(sample_id != "DRYER_natura_NA_16S_control_PCR_PCR-tags_22")
file_samples <- file_samples %>% filter(sample_id != "DRYER_natura_NA_16S_control_extraction_EXT_5")
file_samples <- file_samples %>% filter(sample_id != "DRYER_natura_NA_ITS2_control_extraction_EXT_5")
file_samples <- file_samples %>% filter(sample_id != "DRYER_natura_NA_ITS2_control_PCR_PCR-tags_21")
rownames(file_samples) <- file_samples$sample_id
rownames(motus) <- rownames(reads2)
rownames(pcrs) <- rownames(reads2)
rownames(pcrs) <- rownames(reads2)
reads2 <- t(reads2)
rownames(pcrs) <- rownames(reads2)
View(motus)
metabarList <- metabarlist_generator(reads2,motus,pcrs,file_samples)
# Compute the number of reads per pcr
metabarList$pcrs$nb_reads <- rowSums(metabarList$reads)
# Compute the number of motus per pcr
metabarList$pcrs$nb_motus <- rowSums(metabarList$reads>0)
# Load requested package for plotting
library(ggplot2)
library(reshape2)
check1 <- melt(metabarList$pcrs[,c("control_type", "nb_reads", "nb_motus")])
ggplot(data <- check1, aes(x=control_type, y=value, color=control_type)) +
geom_boxplot() + theme_bw() +
geom_jitter(alpha=0.2) +
scale_color_manual(values = c("brown", "red", "cyan4","pink"), na.value = "darkgrey") +
facet_wrap(~variable, scales = "free_y") +
theme(axis.text.x = element_text(angle=45, h=1))
ggplot(soil_euk$pcrs, aes(x=nb_reads, y=nb_motus, color = control_type)) +
geom_point() + theme_bw() +
scale_y_log10() + scale_x_log10() +
scale_color_manual(values = c("brown", "red", "cyan4","pink"), na.value = "darkgrey")
ggplot(metabarList$pcrs, aes(x=nb_reads, y=nb_motus, color = control_type)) +
geom_point() + theme_bw() +
scale_y_log10() + scale_x_log10() +
scale_color_manual(values = c("brown", "red", "cyan4","pink"), na.value = "darkgrey")
library(ggplot2)
library(reshape2)
library(metabaR)
library(readr)
library(dplyr)
pwd
pwd()
